tool_ID = "grass7_grass7_v.extract"
tool_name = "v.extract"
brief_description = "Selects vector features from an existing vector map and creates a new vector map containing only the selected features."
synopsis = """v.extract
v.extract --help
v.extract[-dtr]input=name[layer=string]   [type=string[,string,...]]   [cats=range]   [where=sql_query]output=name[file=name]   [random=integer]   [new=integer]   [dissolve_column=name]   [--overwrite]  [--help]  [--verbose]  [--quiet]  [--ui]"""
parameters = """input=name[required]
    Name of input vector map
    Or data source for direct OGR access
layer=string
    Layer number or name ('-1' for all layers)
    A single vector map can be connected to multiple database tables. This number determines which table to use. When used with direct OGR access this is the layer name.
    Default:1
type=string[,string,...]
    Types to be extracted
    Input feature type
    Options:point, line, boundary, centroid, area, face
    Default:point,line,boundary,centroid,area,face
cats=range
    Category values
    Example: 1,3,7-9,13
where=sql_query
    WHERE conditions of SQL statement without 'where' keyword
    Example: income < 1000 and population >= 10000
output=name[required]
    Name for output vector map
file=name
    Input text file with category numbers/number ranges to be extracted
    If '-' given reads from standard input
random=integer
    Number of random categories matching vector objects to extract
    Number must be smaller than unique cat count in layer
new=integer
    Desired new category value (enter -1 to keep original categories)
    If new >= 0, attributes is not copied
    Default:-1
dissolve_column=name
    Name of attribute column for dissolving areas
    Preserves category values"""
flags = """-d
    Dissolve common boundaries (default is no)
-t
    Do not copy attributes (see also 'new' parameter)
-r
    Reverse selection
--overwrite
    Allow output files to overwrite existing files
--help
    Print usage summary
--verbose
    Verbose module output
--quiet
    Quiet module output
--ui
    Force launching GUI dialog"""
code_example = """from qgis.core import QgsVectorLayer, QgsProject
import processing

def v_extract_grass7():
    input_path = 'path/to/input.shp'
    output_path = 'path/to/output.shp'
    
    extract_params = {
        'input': input_path,  # Name of input vector map or data source
        'layer': 1,  # Layer number or name ('-1' for all layers)
        'type': 'point,line,boundary,centroid,area,face',  # Options: point, line, boundary, centroid, area, face
        'cats': '',  # Category values
        'where': '',  # WHERE conditions of SQL statement without 'where' keyword
        'output': output_path,  # Name for output vector map
        'file': '',  # Input text file with category numbers/number ranges to be extracted
        'random': '',  # Number of random categories matching vector objects to extract
        'new': -1,  # Desired new category value, enter -1 to keep original categories
        'dissolve_column': ''  # Name of attribute column for dissolving areas
    }

    result = processing.run(\"""\"\"grass7:v.extract\", extract_params)
    output_layer = QgsVectorLayer(result['output'], 'Extracted_output', 'ogr')
    QgsProject.instance().addMapLayer(output_layer)

v_extract_grass7()
import processing
from qgis.core import QgsVectorLayer, QgsProject

def extract_vector_map():
    # Define input and output paths
    input_path = 'D:/input_vector_map.shp'
    output_dir = 'C:/Users/Output'
    output_file_name = 'Extracted_Output.shp'
    output_path = f\"{output_dir}/{output_file_name}\"

    # Load the input layer
    input_layer = QgsVectorLayer(input_path, \"Input Vector Map\", \"ogr\")

    # Define parameters for the tool
    parameters = {
        'input': input_path,
        'layer': '1',  # Default: 1
        'type': 'point,line,boundary,centroid,area,face',  # Options: point, line, boundary, centroid, area, face (Default: point,line,boundary,centroid,area,face)
        'cats': '',  # Example: 1,3,7-9,13
        'where': '',  # Example: income < 1000 and population >= 10000
        'output': output_path,
        'file': '',
        'random': '',
        'new': '-1',  # Default: -1
        'dissolve_column': ''
    }

    # Run the extract tool
    result = processing.run(\"grass7:v.extract\", parameters)

    # Load the result as a new layer
    extracted_layer = QgsVectorLayer(output_path, 'Extracted Layer', 'ogr')
    QgsProject.instance().addMapLayer(extracted_layer)

# Execute the function
extract_vector_map()"""