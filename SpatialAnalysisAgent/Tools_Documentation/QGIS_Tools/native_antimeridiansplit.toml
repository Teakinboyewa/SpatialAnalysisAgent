tool_ID = "native:antimeridiansplit"
tool_name = "Geodesic line split at antimeridian"
brief_description = """Splits a line into multiple geodesic segments, whenever the line crosses the antimeridian (±180 degrees longitude)."""
full_description = """Splits a line into multiple geodesic segments, whenever the line crosses the antimeridian (±180 degrees longitude).
Splitting at the antimeridian helps the visual display of the lines in some projections. The returned geometry will always be a multi-part geometry.
Whenever line segments in the input geometry cross the antimeridian, they will be split into two segments, with the latitude of the breakpoint being determined using a geodesic line connecting the points either side of this segment. The current project ellipsoid setting will be used when calculating this breakpoint.
If the input geometry contains M or Z values, these will be linearly interpolated for the new vertices created at the antimeridian.
Allows features in-place modification of line features"""
parameters = """
INPUT: Input layer. Input line vector layer. Type: [vector: line] 
OUTPUT: Split. Specify the output line vector layer. One of: Create Temporary Layer ( 
TEMPORARY_OUTPUT ) Save to File… Save to Geopackage… Save to Database Table… Append to Layer… The file encoding can also be changed here.. Type: [vector: line] Default: [Create temporary layer] outputs = 
OUTPUT: Split. The output line vector layer split at the antimeridian.. Type: [vector: line]
"""
code_example = """
import processing
from qgis.core import QgsVectorLayer, QgsProject

def split_line_at_antimeridian(input_layer_path, output_path):
    # Load the input line vector layer
    input_layer = QgsVectorLayer(input_layer_path, \"""Input Line Layer\", \"ogr\")

    # Define the parameters for the antimeridian split algorithm
    parameters = {
        'INPUT': input_layer,
        'OUTPUT': output_path  # Options: 'TEMPORARY_OUTPUT', 'FILE:path_to_file', 'GPKG:path_to_gpkg', 'DB:database_table', 'APPEND:existing_layer'
    }

    # Run the algorithm
    result = processing.run(\"native:antimeridiansplit\", parameters)

    # Load the output layer
    output_layer = QgsVectorLayer(result['OUTPUT'], 'Antimeridian Split', 'ogr')
    QgsProject.instance().addMapLayer(output_layer)

input_layer_path = \"D:/Data/InputLines.shp\"  # path to the input shapefile
output_path = \"D:/workspace_directory/split_lines_output.shp\"  # path to the output shapefile
split_line_at_antimeridian(input_layer_path, output_path)"""