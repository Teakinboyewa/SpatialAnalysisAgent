tool_ID = "3d:tessellate"
tool_name = "Tessellate"
brief_description = """Tessellates a polygon geometry layer, dividing the geometries into triangular components."""
full_description = """Tessellates a polygon geometry layer, dividing the geometries into triangular components.
The output layer consists of multipolygon geometries for each input feature, with each multipolygon consisting of multiple triangle component polygons.
Allows features in-place modification of polygon features"""
parameters = """INPUT: Input layer. Input polygon vector layer. Type: [vector: polygon]
OUTPUT: Tesselated. Specify the output layer.One of: Create Temporary Layer ( TEMPORARY_OUTPUT ) Save to File… Save to Geopackage… Save to Database Table… Append to Layer… The file encoding can also be changed here.. Type: [vector: polygon] Default: [Create temporary layer]"""
outputs = "OUTPUT: Tesselated. Output multipolygonZ layer. Type: [vector: polygon]"
code_example = """from qgis.core import QgsVectorLayer, QgsProject
import processing

def tessellate_polygons():
    input_path = 'D:/Data/InputPolygonLayer.shp'
    output_path = 'C:/output_path/tesselated_output.shp'

    input_layer = QgsVectorLayer(input_path, 'Input Polygon Layer', 'ogr')

    result = processing.run('3d:tessellate', {
        'INPUT': input_path,
        'OUTPUT': output_path  # One of: Create Temporary Layer ( TEMPORARY_OUTPUT ) Save to File… Save to Geopackage… Save to Database Table… Append to Layer…
    })

    tesselated_layer = QgsVectorLayer(result['OUTPUT'], 'Tessellated', 'ogr')
    QgsProject.instance().addMapLayer(tesselated_layer)

tessellate_polygons()
import processing
from qgis.core import QgsProject, QgsVectorLayer

def tessellate_polygons():
    input_path = 'D:/Data/PolygonData.shp'
    output_path = 'C:/output_path/tesselated_layer.shp'

    input_layer = QgsVectorLayer(input_path, 'Polygon Layer', 'ogr')

    parameters = {
        'INPUT': input_layer,
        'OUTPUT': output_path  # Options: [Create Temporary Layer ( TEMPORARY_OUTPUT ), Save to File… Save to Geopackage… Save to Database Table… Append to Layer…]      
    }

    result = processing.run('3d:tessellate', parameters)
    
    tesselated_layer = QgsVectorLayer(result['OUTPUT'], 'Tesselated Polygons', 'ogr')
    QgsProject.instance().addMapLayer(tesselated_layer)

# Execute the function
tessellate_polygons()"""
