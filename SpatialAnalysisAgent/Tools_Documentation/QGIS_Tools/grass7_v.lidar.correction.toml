tool_ID = "grass7_v.lidar.correction"
tool_name = "v.lidar.correction"
brief_description = "Corrects the v.lidar.growing output. It is the last of the three algorithms for LIDAR filtering."
synopsis = """v.lidar.correction
v.lidar.correction --help
v.lidar.correction[-e]input=nameoutput=nameterrain=name[ew_step=float]   [ns_step=float]   [lambda_c=float]   [tch=float]   [tcl=float]   [--overwrite]  [--help]  [--verbose]  [--quiet]  [--ui]"""
parameters = """input=name[required]
    Name of input vector map
    Input observation vector map name (v.lidar.growing output)
output=name[required]
    Output classified vector map name
terrain=name[required]
    Name for output only 'terrain' points vector map
ew_step=float
    Length of each spline step in the east-west direction
    Default: 25 * east-west resolution
ns_step=float
    Length of each spline step in the north-south direction
    Default: 25 * north-south resolution
lambda_c=float
    Regularization weight in reclassification evaluation
    Default:1
tch=float
    High threshold for object to terrain reclassification
    Default:2
tcl=float
    Low threshold for terrain to object reclassification
    Default:1"""
flags = """-e
    Estimate point density and distance and quit
    Estimate point density and distance in map units for the input vector points within the current region extents and quit
--overwrite
    Allow output files to overwrite existing files
--help
    Print usage summary
--verbose
    Verbose module output
--quiet
    Quiet module output
--ui
    Force launching GUI dialog"""
code_example = """
from qgis.core import QgsVectorLayer, QgsProject
import processing

def lidar_correction():
    input_path = 'D:/input_layer.shp'
    lidar_output_path = 'D:/lidar_output.shp'
    classified_output_path = 'D:/classified_output.shp'
    terrain_output_path = 'D:/terrain_output.shp'
    
    # Load the input layer
    input_layer = QgsVectorLayer(input_path, \"""Input_Vector_Map\", \"ogr\")
    
    # Define the parameters for grass7:v.lidar.correction
    parameters = {
        'input': input_path,
        'input_observations': lidar_output_path,
        'output': classified_output_path,
        'terrain': terrain_output_path,
        'ew_step': '',
        'ns_step': '',
        'lambda_c': '',
        'tch': '',
        'tcl': '',
    }
    
    # Run the lidar correction algorithm
    result = processing.run(\"grass7:v.lidar.correction\", parameters)
    
    # Load the resulting layers
    classified_layer = QgsVectorLayer(result['output'], 'Classified_Vector_Map', 'ogr')
    terrain_layer = QgsVectorLayer(result['terrain'], 'Terrain_Points', 'ogr')
    
    # Add layers to the QGIS project
    QgsProject.instance().addMapLayer(classified_layer)
    QgsProject.instance().addMapLayer(terrain_layer)

# Execute the function
lidar_correction()"""