tool_ID = 'qgis:selectbyattribute'
tool_name = 'Select by attribute'
# provide a brief description (1 line) of the data source to inform AI whether need to use this data source.
brief_description = '''
This algorithm creates a selection in a vector layer. The criteria for selected features is defined based on the values of an attribute from the input layer.
'''
parameters = """
INPUT: Vector layer to select features in 
FIELD: Filtering field of the layer 
OPERATOR: Many different operators are available: [0: =, 1: !=, 2: >, 3:>=, 4:<, 5:<=, 6: begins with, 7: contains, 8:is null, 9: is not null, 10:does not contain 
VALUE: Value to be evaluated 
METHOD: How the selection of the algorithm should be managed. One of:0 — creating new selection, 1 — adding to current selection, 2 — removing from current selection, 3 — selecting within current selection 
OUTPUT: Specify the output (buffer) layer. One of: Create Temporary Layer 
(TEMPORARY_OUTPUT); Save to File…; Save to Geopackage…; Save to Database Table…; Append to Layer…
"""
code_example = """
import processing
    from qgis.core import QgsProject,QgsVectorLayer
    def select_by_attribute(input_layer_path):
        # Define the parameters
        input_layer = QgsVectorLayer(input_layer_path, "Input Layer", "ogr")

        # Define the parameters Example below:
        field_name = 
        parameters = {
            'INPUT': input_layer_path,
            'FIELD': 'Population',
            'OPERATOR': 4, # Select the appropriate operator based on the task. Many different operators are available:0 — =,1 — ≠, 2 — >, 3 — >=, 4 — <, 5 — <=, 6 — begins with, 7 — contains, 8 — is null, 9 — is not null, 10 — does not contain
            'VALUE': 3000,
			'METHOD': 0,
            'OUTPUT': output_layer_path
        }
        # Perform the extract by attribute operation
        result = processing.run("qgis:selectbyattribute", parameters)
        # Load the selected features as a new layer
        output_layer = QgsVectorLayer(output_path, 'Population_less_than_3000', 'ogr')
        QgsProject.instance().addMapLayer(output_layer)
    input_layer_path = "D:/Data/PrevalenceData.shp"  # path to the input shapefile
    output_layer_path ="D:/workspace_directory/output_layer.shp"
    select_by_attribute(input_layer_path)"""