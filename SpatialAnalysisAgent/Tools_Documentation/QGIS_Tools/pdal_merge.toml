tool_ID = "pdal:merge"
tool_name = "Merge"
brief_description = "Merges multiple point cloud files into a single one."
full_description = """Merges multiple point cloud files into a single one."""
parameters = """
LAYERS: Input layers. Input point cloud layers to merge into a single one. Type: [point cloud] [list] 
OUTPUT: Merged. Specify the output point cloud merging input files. One of: Save to a Temporary File Save to File…. Type: [point cloud] Default: [Save to temporary file] 
FILTER_EXPRESSION: Filter expression Optional. 
A 
PDAL expression for selecting a subset of features in the point cloud data. Type: [expression] 
FILTER_EXTENT: Cropping extent Optional. 
A map extent for selecting a subset of features in the point cloud data Available methods are: Calculate from layer…: uses extent of a layer loaded in the current project Calculate from layout map…: uses extent of a layout map item in the active project Calculate from bookmark…: uses extent of a saved bookmark Use map canvas extent Draw on canvas: click and drag a rectangle delimiting the area to take into account Enter the coordinates as xmin, xmax, ymin, ymax. Type: [extent] outputs = 
OUTPUT: Merged. Output point cloud layer merging all the input files.. Type: [point cloud]
"""
code_example = """
import processing
from qgis.core import QgsProject, QgsPointCloudLayer

def merge_point_cloud_layers():
    output_path = 'C:/Users/Output/merged_point_cloud.las'
    
    layers_to_merge = [
        QgsPointCloudLayer('path_to_point_cloud1.las', 'PointCloud1', 'pdal'),
        QgsPointCloudLayer('path_to_point_cloud2.las', 'PointCloud2', 'pdal'),
        QgsPointCloudLayer('path_to_point_cloud3.las', 'PointCloud3', 'pdal')
    ]
    
    merge_params = {
        'LAYERS': [layer.source() for layer in layers_to_merge],
        'OUTPUT': output_path,  # One of: Save to a Temporary File, Save to File….
        'FILTER_EXPRESSION': '',
        'FILTER_EXTENT': None
    }
    
    result = processing.run(\"""pdal:merge\", merge_params)
    
    merged_layer = QgsPointCloudLayer(result['OUTPUT'], 'Merged_Point_Cloud', 'pdal')
    QgsProject.instance().addMapLayer(merged_layer)
    
merge_point_cloud_layers()"""