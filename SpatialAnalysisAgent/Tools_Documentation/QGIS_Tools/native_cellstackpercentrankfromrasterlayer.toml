tool_ID = "native:cellstackpercentrankfromrasterlayer"
tool_name = "Cell stack percentrank from raster layer"
brief_description = """Calculates the cell-wise percentrank value of a stack of rasters based on an input value raster and writes them to an output raster."""
full_description = """Calculates the cell-wise percentrank value of a stack of rasters based on an input value raster and writes them to an output raster.
At each cell location, the current value of the value raster is ranked among the respective values in the stack of all overlaid and sorted cell values of the input rasters. For values outside of the the stack value distribution, the algorithm returns NoData because the value cannot be ranked among the cell values.
There are two methods for percentile calculation:
The linear interpolation methods return the unique values for different percentiles. Both interpolation methods follow their counterpart methods implemented by LibreOffice or Microsoft Excel.
The output raster’s extent and resolution is defined by a reference raster. Input raster layers that do not match the cell size of the reference raster layer will be resampled using nearest neighbor resampling. NoData values in any of the input layers will result in a NoData cell output if the “Ignore NoData values” parameter is not set. The output raster data type will always be Float32 ."""
parameters = """
INPUT: Input layers. Raster layers to evaluate.If multiband rasters are used in the data raster stack, the algorithmwill always perform the analysis on the first band of the rasters. Type: [raster] [list] 
INPUT_VALUE_RASTER: Value raster layer. The layer to rank the values among the stack of all overlaid layers. Type: [raster] 
VALUE_RASTER_BAND: Value raster band. Band of the “value raster layer” to compare to. Type: [integer] Default: 1 
METHOD: Method. Method for percentile calculation: 0 — Inclusive linear interpolation 
(PERCENTRANK.INC) 1 — Exclusive linear interpolation 
(PERCENTRANK.EXC). Type: [enumeration] Default: 0 
IGNORE_NODATA: Ignore NoData values. If unchecked, any NoData cells in the input layers will result in a NoDatacell in the output raster. Type: [boolean] Default: True 
REFERENCE_LAYER: Reference layer. The reference layer for the output layer creation(extent, 
CRS, pixel dimensions). Type: [raster] 
OUTPUT: Output layer. Specification of the output raster. One of: Save to a Temporary File Save to File…. Type: [same as input] Default: [Save to temporary file] 
OUTPUT_NODATA_VALUE: Output NoData value. Value to use for NoData in the output layer. Type: [number] Default: -9999.0 outputs = 
OUTPUT: Output layer. Output raster layer containing the result. Type: [raster] 
CRS_AUTHID: 
CRS authority identifier. The coordinate reference system of the output raster layer. Type: [string] 
EXTENT: Extent. The spatial extent of the output raster layer. Type: [string] 
WIDTH_IN_PIXELS: Width in pixels. The number of columns in the output raster layer. Type: [integer] 
HEIGHT_IN_PIXELS: Height in pixels. The number of rows in the output raster layer. Type: [integer] 
TOTAL_PIXEL_COUNT: Total pixel count. The count of pixels in the output raster layer. Type: [integer]
"""
code_example = """
# Import necessary modules
from qgis.core import QgsRasterLayer, QgsProject
import processing

def cellstack_percent_rank_from_raster_layer():
    # Define input and output paths
    input_layers = ['D:/Data/Layer1.tif', 'D:/Data/Layer2.tif']
    input_value_raster = 'D:/Data/ValueRaster.tif'
    reference_layer = 'D:/Data/ReferenceLayer.tif'
    output_path = 'C:/output_path/output_layer.tif'

    # Load the raster layers
    input_layer_list = [QgsRasterLayer(lyr) for lyr in input_layers]
    input_value_raster_layer = QgsRasterLayer(input_value_raster)
    reference_raster_layer = QgsRasterLayer(reference_layer)

    # Run the Cellstack Percent Rank from Raster Layer algorithm
    result = processing.run('native:cellstackpercentrankfromrasterlayer', {
        'INPUT': input_layer_list,
        'INPUT_VALUE_RASTER': input_value_raster_layer,
        'VALUE_RASTER_BAND': 1,  # Default: 1
        'METHOD': 0,  # 0: Inclusive linear interpolation, 1: Exclusive linear interpolation
        'IGNORE_NODATA': True,
        'REFERENCE_LAYER': reference_raster_layer,
        'OUTPUT': output_path,
        'OUTPUT_NODATA_VALUE': -9999.0  # Default: -9999.0
    })

    # Load the output layer to QGIS
    output_layer = QgsRasterLayer(result['OUTPUT'], 'PercentRankLayer')
    QgsProject.instance().addMapLayer(output_layer)

# Execute the function
cellstack_percent_rank_from_raster_layer()"""