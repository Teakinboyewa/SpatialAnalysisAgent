tool_ID = "native:exportmeshvertices"
tool_name = "Export mesh vertices"
brief_description = "Exports a mesh layer’s vertices to a point vector layer, with the dataset values on vertices as attribute values."
full_description = """Exports a mesh layer’s vertices to a point vector layer, with the dataset values on vertices as attribute values."""
parameters = """
INPUT: Input mesh layer. The mesh layer to export data from. Type: [mesh] 
DATASET_GROUPS: Dataset groups. The dataset groups. Type: [layer] [list] 
DATASET_TIME: Dataset time. The time range to take into account 0 — Current canvas time 1 — Defined date/time 2 — Dataset group time step. Type: [datetime] 
CRS_OUTPUT: Output coordinate system Optional. Coordinate Reference System to assign to the output. Type: [crs] 
VECTOR_OPTION: Export vector option. Coordinate type of vector value exportation. 0 — Cartesian (x,y) 1 — Polar (magnitude, degree) 2 — Cartesian and polar. Type: [enumeration] 
OUTPUT: Output vector layer. Specification of the output file. One of: Create Temporary Layer ( 
TEMPORARY_OUTPUT ) Save to File… Save to Geopackage… Save to Database Table… The file encoding can also be changed here.. Type: [vector: point] Default: [Create temporary layer] outputs = 
OUTPUT: Output vector layer. Output vector point layer containing the vertices of the input meshlayer with associated dataset values. Type: [vector: point]
"""
code_example = """
import processing
from qgis.core import QgsMeshLayer, QgsProject

def export_mesh_vertices(input_layer_path, output_path):
    # Load the input mesh layer
    input_layer = QgsMeshLayer(input_layer_path, \"""Input Mesh\", \"mesh\")

    # Define the parameters
    parameters = {
        'INPUT': input_layer_path,
        'DATASET_GROUPS': [],  # List of dataset groups
        'DATASET_TIME': 0,  # Dataset time options: ['0': 'Current canvas time', '1': 'Defined date/time', '2': 'Dataset group time step']
        'CRS_OUTPUT': '',  # Optional output CRS
        'VECTOR_OPTION': 0,  # Export vector options: ['0': 'Cartesian (x,y)', '1': 'Polar (magnitude, degree)', '2': 'Cartesian and polar']
        'OUTPUT': output_path
    }

    # Run the export mesh vertices algorithm
    result = processing.run(\"native:exportmeshvertices\", parameters)
    # Load the resulting output vector layer
    output_layer = QgsProject.instance().addMapLayer(QgsMeshLayer(result['OUTPUT'], 'Exported_Mesh_Vertices', 'ogr'))

input_layer_path = \"path/to/your/mesh/file\"
output_layer_path = \"path/to/your/output/file\"
export_mesh_vertices(input_layer_path, output_layer_path)"""