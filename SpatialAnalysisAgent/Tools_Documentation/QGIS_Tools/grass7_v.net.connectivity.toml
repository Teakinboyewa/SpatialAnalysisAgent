tool_ID = "grass7_v.net.connectivity"
tool_name = "v.net.connectivity"
brief_description = "Computes vertex connectivity between two sets of nodes in the network."
synopsis = """v.net.connectivity
v.net.connectivity --help
v.net.connectivityinput=name[arc_layer=string]   [node_layer=string]   [arc_column=name]   [arc_backward_column=name]output=name[node_column=name]   [set1_cats=range]   [set1_where=sql_query]   [set2_cats=range]   [set2_where=sql_query]   [--overwrite]  [--help]  [--verbose]  [--quiet]  [--ui]"""
parameters = """input=name[required]
    Name of input vector map
    Or data source for direct OGR access
arc_layer=string
    Arc layer
    Vector features can have category values in different layers. This number determines which layer to use. When used with direct OGR access this is the layer name.
    Default:1
node_layer=string
    Node layer
    Vector features can have category values in different layers. This number determines which layer to use. When used with direct OGR access this is the layer name.
    Default:2
arc_column=name
    Arc forward/both direction(s) cost column (number)
arc_backward_column=name
    Arc backward direction cost column (number)
output=name[required]
    Name for output vector map
node_column=name
    Node cost column (number)
set1_cats=range
    Set1 category values
    Example: 1,3,7-9,13
set1_where=sql_query
    Set1 WHERE conditions of SQL statement without 'where' keyword
    Example: income < 1000 and population >= 10000
set2_cats=range
    Category values
    Set2 category values
set2_where=sql_query
    Set2 WHERE conditions of SQL statement without 'where' keyword
    Example: income < 1000 and population >= 10000"""
flags = """--overwrite
    Allow output files to overwrite existing files
--help
    Print usage summary
--verbose
    Verbose module output
--quiet
    Quiet module output
--ui
    Force launching GUI dialog"""
code_example = """
import processing
from qgis.core import QgsVectorLayer, QgsProject

def v_net_connectivity(input_layer_path, output_path):
    # Load the input layer
    input_layer = QgsVectorLayer(input_layer_path, \"""Input Layer\", \"ogr\")

    # Define the parameters
    parameters = {
        'input': input_layer_path,
        'arc_layer': '',
        'node_layer': '',
        'arc_column': '',
        'arc_backward_column': '',
        'output': output_path,
        'node_column': '',
        'set1_cats': '',
        'set1_where': '',
        'set2_cats': '',
        'set2_where': ''
    }

    # Run the grass7 v.net.connectivity algorithm
    result = processing.run(\"grass7:v.net.connectivity\", parameters)

    # Load the resulting output layer
    output_layer = QgsVectorLayer(result['output'], 'Connected Network', 'ogr')
    QgsProject.instance().addMapLayer(output_layer)

# Define input and output paths
input_layer_path = 'D:/Data/NetworkData.shp'
output_layer_path = 'D:/workspace_directory/output_network_layer.shp'
v_net_connectivity(input_layer_path, output_layer_path)"""