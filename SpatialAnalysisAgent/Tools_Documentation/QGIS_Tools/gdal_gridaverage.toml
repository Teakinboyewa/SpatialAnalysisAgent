tool_ID = "gdal:gridaverage"
tool_name = "Grid (Moving average)"
brief_description = """The Moving Average is a simple data averaging algorithm. It uses a moving window of elliptic form to search values and averages all data points within the window. Search ellipse can be rotated by specified angle, the center of ellipse located at the grid node. Also the minimum number of data points to average can be set, if there are not enough points in window, the grid node considered empty and will be filled with specified NoData value."""
full_description = """The Moving Average is a simple data averaging algorithm. It uses a moving window of elliptic form to search values and averages all data points within the window. Search ellipse can be rotated by specified angle, the center of ellipse located at the grid node. Also the minimum number of data points to average can be set, if there are not enough points in window, the grid node considered empty and will be filled with specified NoData value.
This algorithm is derived from the GDAL grid utility .
Default menu: Raster ► Analysis"""
parameters = """INPUT: Point layer. Input point vector layer. Type: [vector: point]
RADIUS_1: The first radius of search ellipse. The first radius (X axis if rotation angle is 0) ofthe search ellipse. Type: [number] Default: 0.0
RADIUS_2: The second radius of search ellipse. The second radius (Y axis if rotation angle is 0)of the search ellipse. Type: [number] Default: 0.0
ANGLE: Angle of search ellipse rotation in degrees (counter clockwise). Angle of ellipse rotation in degrees.Ellipse rotated counter clockwise.. Type: [number] Default: 0.0
MIN_POINTS: Minimum number of data points to use. Minimum number of data points to average.If less amount of points found the grid nodeconsidered empty and will be filled withNoData marker.. Type: [number] Default: 0.0
NODATA: NoData. NoData marker to fill empty points. Type: [number] Default: 0.0
OUTPUT: Interpolated (moving average). Specify the output raster layer. One of: Save to a Temporary File Save to File…. Type: [raster] Default: [Save to temporary file]
Z_FIELD: Z value from field Optional. Field for the interpolation. Type: [tablefield: numeric]
OPTIONS: Additional creation options Optional. For adding one or more creation options that control theraster to be created (colors, block size, filecompression…).For convenience, you can rely on predefined profiles (see GDAL driver options section ). Batch Process and Model Designer: separate multiple options with a pipecharacter ( | ).. Type: [string] Default: ‘’
EXTRA: Additional command-line parameters Optional. Add extra GDAL command line options. Type: [string] Default: None
DATA_TYPE: Output data type. Defines the data type of the output raster file.Options: 0 — Byte        (Eight bit unsigned integer (quint8)) 1 — Int16       (Sixteen bit signed integer (qint16)) 2 — UInt16      (Sixteen bit unsigned integer (quint16)) 3 — UInt32      (Thirty two bit unsigned integer (quint32)) 4 — Int32       (Thirty two bit signed integer (qint32)) 5 — Float32     (Thirty two bit floating point (float)) 6 — Float64     (Sixty four bit floating point (double)) 7 — CInt16      (Complex Int16) 8 — CInt32      (Complex Int32) 9 — CFloat32    (Complex Float32) 10 — CFloat64   (Complex Float64) 11 — Int8       (Eight bit signed integer (qint8)) Available options depend on the GDAL version built with QGIS(see Help ► About menu). Type: [enumeration] Default: 5"""
outputs = "OUTPUT: Interpolated (moving average). Output raster with interpolated values. Type: [raster]"
code_example = """
from qgis.core import QgsVectorLayer, QgsProject
import processing

def run_gdal_gridaverage():
    # Define input and output paths
    input_path = 'D:/Data/points.shp'
    output_path = 'C:/output_path/interpolated.tif'
  
    # Load the shapefile as a vector layer
    input_layer = QgsVectorLayer(input_path, 'Points', 'ogr')

    # Define the parameters
    parameters = {
        'INPUT': input_path,
        'RADIUS_1': 50.0,
        'RADIUS_2': 50.0,
        'ANGLE': 0.0,
        'MIN_POINTS': 1,
        'NODATA': -9999,
        'OUTPUT': output_path,
        'Z_FIELD': 'elevation', 
        'OPTIONS': '',
        'EXTRA': '',
        'DATA_TYPE': 5  # Options: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
    }
    
    # Run the grid average algorithm
    result = processing.run('gdal:gridaverage', parameters)

    # Load the result layer to QGIS
    interpolated_layer = QgsVectorLayer(result['OUTPUT'], 'Interpolated (Moving Average)', 'ogr')
    QgsProject.instance().addMapLayer(interpolated_layer)

# Execute the function
run_gdal_gridaverage()"""
