tool_ID = "pdal:density"
tool_name = "Density"
brief_description = "Exports a raster file based on the number of points within each raster cell - useful for quality checking of point cloud datasets."
full_description = """Exports a raster file based on the number of points within each raster cell - useful for quality checking of point cloud datasets."""
parameters = """
INPUT: Input layer. Input point cloud layer to export. Type: [point cloud] 
RESOLUTION: Resolution of the density raster. Cell size of the output raster. Type: [number] Default: 1.0 
TILE_SIZE: Tile size for parallel runs. Size of the tiles to split the data into for parallel runs. Type: [number] Default: 1000 
OUTPUT: Density. Specify the raster file to export the data to. One of: Save to a Temporary File Save to File…. Type: [raster] Default: [Save to temporary file] 
FILTER_EXPRESSION: Filter expression Optional. 
A 
PDAL expression for selecting a subset of features in the point cloud data. Type: [expression] 
FILTER_EXTENT: Cropping extent Optional. 
A map extent for selecting a subset of features in the point cloud data Available methods are: Calculate from layer…: uses extent of a layer loaded in the current project Calculate from layout map…: uses extent of a layout map item in the active project Calculate from bookmark…: uses extent of a saved bookmark Use map canvas extent Draw on canvas: click and drag a rectangle delimiting the area to take into account Enter the coordinates as xmin, xmax, ymin, ymax. Type: [extent] 
ORIGIN_X: 
X origin of a tile for parallel runs Optional. . Type: [number] 
ORIGIN_Y: 
Y origin of a tile for parallel runs Optional. . Type: [number] outputs = 
OUTPUT: Density. Output raster layer with number of points within each cell.Currently supported format is 
.TIF .. Type: [raster]
"""
code_example = """
import processing
from qgis.core import QgsProject, QgsPointCloudLayer

def generate_density_raster():
    input_layer_path = 'D:/input_point_cloud.las'
    output_path = 'C:/Users/Output/density_raster.tif'

    parameters = {
        'INPUT': input_layer_path,
        'RESOLUTION': 1.0,
        'TILE_SIZE': 1000,
        'OUTPUT': output_path,
        'FILTER_EXPRESSION': '',
        'FILTER_EXTENT': '',
        'ORIGIN_X': '',
        'ORIGIN_Y': ''
    }
    
    result = processing.run(\"""pdal:density\", parameters)
    
    output_layer = QgsPointCloudLayer(result['OUTPUT'], 'Density Raster', 'gdal')
    QgsProject.instance().addMapLayer(output_layer)

generate_density_raster()"""