tool_ID = "gdal:convertformat"
tool_name = "Convert format"
brief_description = "Converts any OGR-supported vector layer into another OGR-supported format."
full_description = """Converts any OGR-supported vector layer into another OGR-supported format.
This algorithm is derived from the ogr2ogr utility ."""
parameters = """
INPUT: Input layer. Input vector layer. Type: [vector: any] 
CONVERT_ALL_LAYERS: Convert all layers from dataset. Converts the whole dataset.Supported output formats for this option are 
GPKG and 
GML .. Type: [boolean] Default: False 
OUTPUT: Converted. Specification of the output vector layer.One of: Save to a Temporary File Save to File… For Save to File , the output format has to be specified.All GDAL vector formats are supported.For Save to a Temporary File the 
QGIS default vector formatwill be used.. Type: [same as input] 
OPTIONS: Additional creation options Optional. Additional GDAL creation options.. Type: [string] Default: ‘’ (no additional options) outputs = 
OUTPUT: Converted. The output vector layer. Type: [same as input]
"""
code_example = """
import processing
from qgis.core import QgsVectorLayer, QgsProject

def convert_layer_format():
    # Define the input and output paths
    input_path = 'D:/input_layer.shp'
    output_path = 'D:/output_layer.gpkg'  # For Save to File

    # Load the input layer
    input_layer = QgsVectorLayer(input_path, \"""Input Layer\", \"ogr\")

    # Set conversion processing parameters
    convert_params = {
        'INPUT': input_path,
        'CONVERT_ALL_LAYERS': False,  # True or False
        'OUTPUT': output_path,  # Save to a Temporary File or Save to File
        'OPTIONS': ''
    }

    # Run conversion
    result = processing.run(\"gdal:convertformat\", convert_params)

    # Load the converted layer
    converted_layer = QgsVectorLayer(result['OUTPUT'], 'Converted_Layer', 'ogr')
    QgsProject.instance().addMapLayer(converted_layer)

# Execute the function
convert_layer_format()"""