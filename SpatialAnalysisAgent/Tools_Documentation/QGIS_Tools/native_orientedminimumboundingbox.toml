tool_ID = "native:orientedminimumboundingbox"
tool_name = "Oriented minimum bounding box"
brief_description = """Calculates the minimum area rotated rectangle for each feature in the input layer."""
full_description = """Calculates the minimum area rotated rectangle for each feature in the input layer.
Allows features in-place modification of polygon features"""
parameters = """INPUT: Input layer. Input vector layer. Type: [vector: any]
OUTPUT: Bounding boxes. Specify the output polygon vector layer. One of: Create Temporary Layer ( TEMPORARY_OUTPUT ) Save to File… Save to Geopackage… Save to Database Table… Append to Layer… The file encoding can also be changed here.. Type: [vector: polygon] Default: [Create temporary layer]"""
outputs = "OUTPUT: Bounding boxes. The output polygon vector layer.. Type: [vector: polygon]"
code_example = """
import processing
from qgis.core import QgsVectorLayer, QgsProject

def oriented_minimum_bounding_boxes():
    input_path = 'D:/Data/Layer.shp'
    output_path = 'C:/output_path/bounding_boxes.shp'

    input_layer = QgsVectorLayer(input_path, 'Input Layer', 'ogr')

    parameters = {
        'INPUT': input_path,
        'OUTPUT': output_path
    }

    result = processing.run('native:orientedminimumboundingbox', parameters)

    bounding_boxes_layer = QgsVectorLayer(result['OUTPUT'], 'Bounding Boxes', 'ogr')
    QgsProject.instance().addMapLayer(bounding_boxes_layer)

oriented_minimum_bounding_boxes()"""
