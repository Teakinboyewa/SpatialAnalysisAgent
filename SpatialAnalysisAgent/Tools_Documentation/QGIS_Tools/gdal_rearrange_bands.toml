tool_ID = "gdal:rearrange_bands"
tool_name = "Rearrange bands"
brief_description = "Creates a new raster using selected band(s) from a given raster layer. The algorithm also makes it possible to reorder the bands for the newly-created raster."
full_description = """Creates a new raster using selected band(s) from a given raster layer. The algorithm also makes it possible to reorder the bands for the newly-created raster.
This algorithm is derived from the GDAL translate utility ."""
parameters = """
INPUT: Input layer. Input raster layer. Type: [raster] 
BANDS: Selected band(s). Ordered list of the bands to use to create the new raster. Type: [raster band] [list] Default: None 
OUTPUT: Converted. Specification of the output raster. One of: Save to a Temporary File Save to File…. Type: [raster] Default: [Save to temporary file] 
OPTIONS: Additional creation options Optional. For adding one or more creation options that control theraster to be created (colors, block size, filecompression…).For convenience, you can rely on predefined profiles (see GDAL driver options section ). Batch Process and Model Designer: separate multiple options with a pipecharacter ( | ).. Type: [string] Default: ‘’ 
DATA_TYPE: Output data type. Defines the data type of the output raster file.Options: 0 — Use Input Layer Data Type 1 — Byte (Eight bit unsigned integer (quint8)) 2 — Int16 (Sixteen bit signed integer (qint16)) 3 — UInt16 (Sixteen bit unsigned integer (quint16)) 4 — UInt32 (Thirty two bit unsigned integer (quint32)) 5 — Int32 (Thirty two bit signed integer (qint32)) 6 — Float32 (Thirty two bit floating point (float)) 7 — Float64 (Sixty four bit floating point (double)) 8 — CInt16 (Complex Int16) 9 — CInt32 (Complex Int32) 10 — CFloat32 (Complex Float32) 11 — CFloat64 (Complex Float64) 12 — Int8 (Eight bit signed integer (qint8)) Available options depend on the GDAL version built with QGIS(see Help ► About menu). Type: [enumeration] Default: 0 outputs = 
OUTPUT: Converted. Output raster layer with rearranged bands.. Type: [raster]
"""
code_example = """
import processing
from qgis.core import QgsRasterLayer, QgsProject

def rearrange_bands():
    # Define the input and output paths
    input_path = 'D:/input_raster.tif'
    output_dir = 'C:/Users/Output'
    output_file_name = \"""rearranged_bands_raster.tif\"
    output_path = f\"{output_dir}/{output_file_name}\"
    
    # Load the input raster
    input_layer = QgsRasterLayer(input_path, \"Input Raster\")

    # Set the processing parameters
    parameters = {
        'INPUT': input_path,
        'BANDS': [1, 2],  # Ordered list of bands to use
        'OUTPUT': output_path,
        'OPTIONS': '',
        'DATA_TYPE': 0  # Options for DATA_TYPE: 0 - 12
    }

    # Run the rearrange bands algorithm
    result = processing.run(\"gdal:rearrange_bands\", parameters)

    # Load the resulting raster
    output_layer = QgsRasterLayer(result['OUTPUT'], 'Rearranged Bands', 'gdal')
    QgsProject.instance().addMapLayer(output_layer)

# Execute the function
rearrange_bands()"""