tool_ID = "pdal:thinbyradius"
tool_name = "Thin (by sampling radius)"
brief_description = "Creates a thinned version of the point cloud by performing sampling by distance point (reduces the number of points within a certain radius)."
full_description = """Creates a thinned version of the point cloud by performing sampling by distance point (reduces the number of points within a certain radius)."""
parameters = """
INPUT: Input layer. Input point cloud layer to create a thinned version from. Type: [point cloud] 
SAMPLING_RADIUS: Sampling radius (in map units). Distance within which points are sampled to a unique point. Type: [number] Default: 1.0 
OUTPUT: Thinned (by radius). Specify the output point cloud with reduced points. One of: Save to a Temporary File Save to File…. Type: [point cloud] Default: [Save to temporary file] 
FILTER_EXPRESSION: Filter expression Optional. 
A 
PDAL expression for selecting a subset of features in the point cloud data. Type: [expression] 
FILTER_EXTENT: Cropping extent Optional. 
A map extent for selecting a subset of features in the point cloud data Available methods are: Calculate from layer…: uses extent of a layer loaded in the current project Calculate from layout map…: uses extent of a layout map item in the active project Calculate from bookmark…: uses extent of a saved bookmark Use map canvas extent Draw on canvas: click and drag a rectangle delimiting the area to take into account Enter the coordinates as xmin, xmax, ymin, ymax. Type: [extent] outputs = 
OUTPUT: Thinned (by radius). Output point cloud layer with reduced points.. Type: [point cloud]
"""
code_example = """
from qgis.core import QgsProject, QgsPointCloudLayer
import processing

def thin_point_cloud():
    # Define the input and output paths
    input_path = 'D:/Data/input_point_cloud.las'
    output_path = 'D:/workspace_directory/thinned_point_cloud.las'
    
    # Load the input point cloud layer
    input_layer = QgsPointCloudLayer(input_path, \"""Input Point Cloud\", \"ogr\")

    # Set thinning by radius processing parameters
    params = {
        'INPUT': input_path,
        'SAMPLING_RADIUS': 1.0,  # Default sampling radius
        'OUTPUT': output_path,
        'FILTER_EXPRESSION': '',  # Optional: Specify a filter expression
        'FILTER_EXTENT': ''  # Optional: Specify an extent for filtering
    }
    
    # Run the thinning by radius operation
    result = processing.run(\"pdal:thinbyradius\", params)

    # Load the thinned point cloud layer
    thinned_layer = QgsPointCloudLayer(result['OUTPUT'], 'Thinned Point Cloud', 'ogr')
    QgsProject.instance().addMapLayer(thinned_layer)

# Execute the function
thin_point_cloud()"""