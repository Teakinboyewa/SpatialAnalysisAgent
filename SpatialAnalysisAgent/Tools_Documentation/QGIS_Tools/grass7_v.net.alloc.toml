tool_ID = "grass7_v.net.alloc"
tool_name = "v.net.alloc"
brief_description = "nter node must be opened (costs >= 0). Costs of center node are used in calculation."
synopsis = """v.net.alloc
v.net.alloc --help
v.net.alloc[-tgu]input=nameoutput=name[method=string]center_cats=rangearc_layer=stringarc_type=string[,string,...]node_layer=string[arc_column=name]   [arc_backward_column=name]   [node_column=name]   [turn_layer=string]   [turn_cat_layer=string]   [--overwrite]  [--help]  [--verbose]  [--quiet]  [--ui]"""
parameters = """input=name[required]
    Name of input vector map
    Or data source for direct OGR access
output=name[required]
    Name for output vector map
method=string
    Use costs from centers or costs to centers
    Options:from, to
    Default:from
center_cats=range[required]
    Category values
    Categories of centers (points on nodes) to which net will be allocated, layer for this categories is given by nlayer option
arc_layer=string[required]
    Arc layer
    Vector features can have category values in different layers. This number determines which layer to use. When used with direct OGR access this is the layer name.
    Default:1
arc_type=string[,string,...][required]
    Arc type
    Input feature type
    Options:line, boundary
    Default:line,boundary
node_layer=string[required]
    Node layer
    Vector features can have category values in different layers. This number determines which layer to use. When used with direct OGR access this is the layer name.
    Default:2
arc_column=name
    Arc forward/both direction(s) cost column (number)
arc_backward_column=name
    Arc backward direction cost column (number)
node_column=name
    Node cost column (number)
turn_layer=string
    Layer with turntable
    Relevant only with -t flag
    Default:3
turn_cat_layer=string
    Layer with unique categories used in turntable
    Relevant only with -t flag
    Default:4"""
flags = """-t
    Use turntable
-g
    Use geodesic calculation for longitude-latitude projects
-u
    Create unique categories and attribute table
    Default: same category like nearest center
--overwrite
    Allow output files to overwrite existing files
--help
    Print usage summary
--verbose
    Verbose module output
--quiet
    Quiet module output
--ui
    Force launching GUI dialog"""
code_example = """
import processing
from qgis.core import QgsVectorLayer, QgsProject

def v_net_alloc():
    # Define the input and output paths
    input_path = \"""D:/input_vector_layer.shp\"
    output_dir = \"C:/Users/Output\"
    output_file_name = \"network_allocation_output.shp\"
    output_path = f\"{output_dir}/{output_file_name}\"
    
    # Load the input layer
    input_layer = QgsVectorLayer(input_path, \"input_layer\", \"ogr\")
    
    # Set parameters
    parameters = {
        'input': input_path,       # Name of input vector map
        'output': output_path,     # Name for output vector map
        'method': 'from',          # Use costs from centers or costs to centers. Options: from, to. Default: from
        'center_cats': '1-5',      # Category values
        'arc_layer': '1',          # Arc layer. Default: 1
        'arc_type': 'line,boundary',# Arc type. Options: line, boundary. Default: line,boundary
        'node_layer': '2',         # Node layer. Default: 2
        'arc_column': '',          # Arc forward/both direction(s) cost column
        'arc_backward_column': '', # Arc backward direction cost column
        'node_column': '',         # Node cost column
        'turn_layer': '',          # Layer with turntable. Default: 3
        'turn_cat_layer': ''       # Layer with unique categories used in turntable. Default: 4
    }
    
    # Run processing tool
    result = processing.run(\"grass7:v.net.alloc\", parameters)
    
    # Load the result layer
    output_layer = QgsVectorLayer(result['output'], \"network_allocated\", \"ogr\")
    QgsProject.instance().addMapLayer(output_layer)

# Execute the function
v_net_alloc()"""