tool_ID = "qgis:randompointsinlayerbounds"
tool_name = "Random points in layer bounds"
brief_description = "Creates a new point layer with a given number of random points, all of them within the extent of a given layer."
full_description = """Creates a new point layer with a given number of random points, all of them within the extent of a given layer.
A minimum distance can be specified, to avoid points being too close to each other.
Default menu: Vector ► Research Tools"""
parameters = """
INPUT: Input layer. Input polygon layer defining the area. Type: [vector: polygon] 
POINTS_NUMBER: Number of points. Number of points to create. Type: [number] Default: 1 
MIN_DISTANCE: Minimum distance between points. The minimum distance between points. Type: [number] Default: 0.0 
OUTPUT: Random points. The output random points. One of: Create Temporary Layer ( 
TEMPORARY_OUTPUT ) Save to File… Save to Geopackage… Save to Database Table… The file encoding can also be changed here.. Type: [vector: point] Default: [Create temporary layer] outputs = 
OUTPUT: Random points. The output random points layer.. Type: [vector: point]
"""
code_example = """
import processing
from qgis.core import QgsVectorLayer, QgsProject

def generate_random_points():
    input_layer_path = 'D:/input_polygon_layer.shp'
    output_path = 'D:/output_random_points.shp'
    
    input_layer = QgsVectorLayer(input_layer_path, \"""Input Polygon Layer\", \"ogr\")

    parameters = {
        'INPUT': input_layer_path,
        'POINTS_NUMBER': 1,  # Default number of points to create
        'MIN_DISTANCE': 0.0,  # Default minimum distance between points
        'OUTPUT': output_path  # Options: TEMPORARY_OUTPUT, save to file, save to database, etc.
    }

    result = processing.run('qgis:randompointsinlayerbounds', parameters)
    
    random_points_layer = QgsVectorLayer(result['OUTPUT'], 'Random Points', 'ogr')
    QgsProject.instance().addMapLayer(random_points_layer)

generate_random_points()"""