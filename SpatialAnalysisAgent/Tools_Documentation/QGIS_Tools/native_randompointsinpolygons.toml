tool_ID = "native:randompointsinpolygons"
tool_name = "Random points in polygons"
brief_description = "Creates a point layer with points placed inside the polygons of another layer."
full_description = """Creates a point layer with points placed inside the polygons of another layer.
For each feature (polygon / multi-polygon) geometry in the input layer, the given number of points is added to the result layer.
Per feature and global minimum distances can be specified in order to avoid points being too close in the output point layer. If a minimum distance is specified, it may not be possible to generate the specified number of points for each feature. The total number of generated points and missed points are available as output from the algorithm.
The illustration below shows the effect of per feature and global minimum distances and zero/non-zero minimum distances (generated with the same seed, so at least the first point generated will be the same).
The maximum number of tries per point can be specified. This is only relevant for non-zero minimum distance.
A seed for the random number generator can be provided, making it possible to get identical random number sequences for different runs of the algorithm.
The attributes of the polygon feature on which a point was generated can be included (Include polygon attributes).
If you want approximately the same point density for all the features, you can data-define the number of points using the area of the polygon feature geometry."""
parameters = """
INPUT: Input polygon layer. Input polygon vector layer. Type: [vector: line] 
POINTS_NUMBER: Number of points for each feature. Number of points to create. Type: [number ] Default: 1 
MIN_DISTANCE: Minimum distance between points Optional. The minimum distance between points within one polygon feature. Type: [number ] Default: 0.0 
OUTPUT: Random points in polygons. The output random points. One of: Create Temporary Layer ( 
TEMPORARY_OUTPUT ) Save to File… Save to Geopackage… Save to Database Table… The file encoding can also be changed here.. Type: [vector: point] Default: [Create temporary layer] 
MIN_DISTANCE_GLOBAL: Global minimum distance between points Optional. The global minimum distance between points.Should be smaller than the Minimum distance betweenpoints (per feature) for that parameter to have an effect.. Type: [number ] Default: 0.0 
MAX_TRIES_PER_POINT: Maximum number of search attempts (for Min. dist. > 0) Optional. The maximum number of tries per point.Only relevant if the minimum distance between points is set(and greater than 0).. Type: [number ] Default: 10 
SEED: Random seed Optional. The seed to use for the random number generator.. Type: [number] Default: Not set 
INCLUDE_POLYGON_ATTRIBUTES: Include polygon attributes. If set, a point will get the attributes from the line onwhich it is placed.. Type: [boolean] Default: True outputs = 
OUTPUT: Random points in polygons. The output random points layer.. Type: [vector: point] 
FEATURES_WITH_EMPTY_OR_NO_GEOMETRY: Number of features with empty or no geometry. . Type: [number] 
OUTPUT_POINTS: Total number of points generated. . Type: [number] 
POINTS_MISSED: Number of missed points. The number of points that could not be generated due tothe minimum distance constraint.. Type: [number] 
POLYGONS_WITH_MISSED_POINTS: Number of features with missed points. Not including features with empty or no geometry. Type: [number]
"""
code_example = """
import processing
from qgis.core import QgsVectorLayer, QgsProject

def generate_random_points():
    input_path = \"""D:/path_to_polygon_input.shp\"
    output_path = \"D:/output_random_points.shp\"
    input_layer = QgsVectorLayer(input_path, \"Polygon Input Layer\", \"ogr\")
    
    parameters = {
        'INPUT': input_path,  # Input polygon vector layer
        'POINTS_NUMBER': 1,  # Default is 1
        'MIN_DISTANCE': 0.0,  # Default is 0.0
        'OUTPUT': output_path,  # Random points in polygons; options: TEMPORARY_OUTPUT, Save to File, Save to Geopackage, Save to Database Table
        'MIN_DISTANCE_GLOBAL': 0.0,  # Default is 0.0
        'MAX_TRIES_PER_POINT': 10,  # Default is 10
        'SEED': None,  # Default is not set
        'INCLUDE_POLYGON_ATTRIBUTES': True  # Default is True
    }

    result = processing.run(\"native:randompointsinpolygons\", parameters)
    output_layer = QgsVectorLayer(result['OUTPUT'], 'Random Points Output', 'ogr')
    QgsProject.instance().addMapLayer(output_layer)

generate_random_points()"""